package com.iot.pf.controller;

import java.util.HashMap;

import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.junit.experimental.theories.ParametersSuppliedBy;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.view.RedirectView;

import com.iot.pf.dto.User;
import com.iot.pf.service.UserService;

@Controller
public class IndexController {
	
	private Logger log = Logger.getLogger(IndexController.class);
	
	@Autowired
	UserService us;

	@RequestMapping("/index.do")
	public ModelAndView index() {
		ModelAndView mv = new ModelAndView();
		
		mv.setViewName("index");
		return mv;
	}
	
	@RequestMapping("/dashboard.do")
	public ModelAndView dashboard(@RequestParam HashMap<String,Object> params) {
		ModelAndView mv = new ModelAndView();
		System.out.println("----------------------");
		System.out.println(us.list(params));
		System.out.println("----------------------");
		mv.setViewName("main");
		return mv;
	}

	@RequestMapping("/formGeneral.do")
	public ModelAndView formGeneral() {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("form-general");
		return mv;
	}
	
	@RequestMapping("/loginPage.do")
	public ModelAndView loginPage() {
	    ModelAndView mv = new ModelAndView();
		mv.setViewName("login");
		return mv;
	}
	
	@RequestMapping("logout.do")
	public ModelAndView logout(HttpSession session) {
		ModelAndView mv = new ModelAndView();
		session.invalidate();
		mv.setViewName("index");
		return mv;
	}
	
	@RequestMapping("/login.do")
	public ModelAndView login(@RequestParam HashMap<String,String> params,HttpSession session) {
		log.debug("JYS 로그인정보입니다 쳐받으세요" + params);
		ModelAndView mv = new ModelAndView();
		String userName = params.get("username").toString();
		String password = params.get("password").toString();
		
		if(us.checkId(userName, password) != 1) {
	       if(us.chkId(userName) != 1) {
	    	   mv.addObject("msg","아이디가 맞지않습니다");
	       }else {
	    	   mv.addObject("msg1","비밀번호가 맞지않습니다");
	       }
		}else {
		   User user = us.getUser(userName);
		   us.lastp(user.getSeq());
		   session.setAttribute("userName", userName);
		   session.setAttribute("fullName", user.getFullName());
		   session.setAttribute("email", user.getEmail());
		   RedirectView rv = new RedirectView("/wpf/index.do");
           mv.setView(rv);
	      return mv;	
		}
		
		mv.setViewName("login");
		return mv;
	}
	
	@RequestMapping("/joinPage.do")
	public ModelAndView joinPage() {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("join");
		return mv;
	}
	
	@RequestMapping("/join.do")
	public ModelAndView join(@RequestParam HashMap<String,Object> params) {
		log.debug("JYS 로그인입력값 = " + params);
	    ModelAndView mv = new ModelAndView();    
	    
	    String fullName = params.get("name").toString();
	    String userName = params.get("username").toString();
	    String email = params.get("email").toString();
	    String password = params.get("password").toString();
	    
	    User user = new User();
	    user.setFullName(fullName);
	    user.setUserName(userName);
	    user.setEmail(email);
	    user.setPassword(password);
	    
	    us.insert(user);
	   
	    mv.setViewName("login");
		return mv;
	}
	
	@RequestMapping("/chkId.do")
	@ResponseBody
	public int chkId(@RequestParam HashMap<String,String> params) {
		log.debug("JYS 아이디확인 = " + params);
	    
		String userName = params.get("userName").toString();
		
		return us.chkId(userName);		
	}
	
	@RequestMapping("/pwReminderPage.do")
	public ModelAndView pwReminderPage() {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("pwReminder");
		return mv;
	}
	
}
