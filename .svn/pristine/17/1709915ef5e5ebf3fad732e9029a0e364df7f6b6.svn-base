<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Annotation 기반의 Component Scan 필터(service package 만 검색) -->
	<context:component-scan base-package="com.iot.pf">
		<context:include-filter type="regex" expression="\.*\.service\.*" />
	</context:component-scan>

	<!-- DAO 구현체 역할을 대신 해주는 클래스 기본설정 4가지가 필요하다. -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		 <!-- DB에 접속 하기 위해서 설정 -->
		<property name="dataSource" ref="dataSource" />	
		
		<!-- myBatis 기본 설정 -->
		<property name="configLocation" value="classpath:mybatis-configuration.xml" />
		
		<!-- query 적힌 xml 위치 -->
	  <property name="mapperLocations" value="classpath:sql/SQL.*.xml" /> 

		<!-- 트랜잭션 관리를 위한 것 -->
		<property name="transactionFactory">
			<bean class="org.mybatis.spring.transaction.SpringManagedTransactionFactory" />
		</property>
	</bean>

	<!-- DAO 위치를 basePackage로.. -->
	<!-- 작업지시서가 있는 패키지 위치를 잡아줘야 사용 할 수 있다 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.iot.pf.dao" />
	</bean>

	<!-- 트랜잭션 관리를 위한 bean  -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans>
